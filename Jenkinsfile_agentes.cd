pipeline {
    // Definimos un agente 'none' a nivel global porque cada etapa definirá el suyo.
    agent none

    environment {
        AWS_REGION            = 'us-east-1'
        S3_BUCKET_NAME        = 'aws-sam-cli-managed-default-samclisourcebucket-bzstlrjji7cw'
        PRODUCTION_STACK_NAME = 'todo-api-production'
    }

    stages {
        // ETAPA 1: DESPLIEGUE EN PRODUCCIÓN
        stage('Despliegue en Producción') {
            // CAMBIO: Esta etapa se ejecuta en el agente de despliegue
            agent { label 'deploy-test-agent' }
            steps {
                // El agente necesita el código para poder desplegar
                checkout scm
                
                echo "--- Construyendo y desplegando la aplicación en Producción ---"
                sh 'sam build'
                sh """
                    sam deploy \\
                        --stack-name ${PRODUCTION_STACK_NAME} \\
                        --s3-bucket ${S3_BUCKET_NAME} \\
                        --capabilities CAPABILITY_IAM \\
                        --region ${AWS_REGION} \\
                        --no-fail-on-empty-changeset \\
                        --parameter-overrides DynamoDBTableName=production-todos-table
                """
            }
        }

        // ETAPA 2: PRUEBAS DE SOLO LECTURA
        stage('Pruebas de Lectura (Pytest)') {
            // CAMBIO: Las pruebas también se ejecutan en el mismo agente de despliegue
            agent { label 'deploy-test-agent' }
            steps {
                // No es necesario hacer 'checkout scm' de nuevo, porque esta etapa
                // se ejecuta en el mismo agente y workspace que la anterior.
                script {
                    echo "--- Instalando dependencias de las pruebas ---"
                    sh 'pip install -r test/integration/requirements.txt --break-system-packages'

                    echo "--- Obteniendo la URL del API de Producción ---"
                    def apiUrl = sh(
                        script: "aws cloudformation describe-stacks --stack-name ${PRODUCTION_STACK_NAME} --query 'Stacks[0].Outputs[?OutputKey==`BaseUrlApi`].OutputValue' --output text --region ${AWS_REGION}",
                        returnStdout: true
                    ).trim()
                    
                    echo "URL de la API obtenida: ${apiUrl}"
                    
                    echo "--- Ejecutando pruebas de solo lectura ---"
                    sh """
                        export PATH="/home/jenkins/.local/bin:\$PATH"
                        API_URL=${apiUrl} pytest -m readonly test/integration/todoApiTest.py
                    """
                }
            }
        }
    }
}
